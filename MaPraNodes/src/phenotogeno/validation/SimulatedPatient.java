package phenotogeno.validation;

import java.util.LinkedList;

public class SimulatedPatient {
	
	/** unique identifier of the patient*/
	private String id;
	/** disease of the patient */
	private int disease;
	/** symptoms of the patient*/
	private LinkedList<Integer> query;
	
	/**
	 * generates a SimulatedPatient object
	 * @param id unique identifier of the patient
	 * @param disease disease of the patient
	 * @param query list of symptom ids representing the symptoms of the patient
	 */
	public SimulatedPatient(String id, int disease, LinkedList<Integer> query){
		this.id=id;
		this.disease = disease;
		this.query=query;
	}
	
	/**
	 * retrieves the patient id
	 * @return unique identifier of the patient
	 */
	public String getId(){
		return id;
	}
	
	/**
	 * retrieves the disease of the patient
	 * @return PhenoDis disease id of the patient's disease
	 */
	public int getDisease(){
		return disease;
	}
	
	/**
	 * retrieves the symptoms of the patient
	 * @return list of PhenoDis symptoms ids representing the patients symptoms
	 */
	public LinkedList<Integer> getSymptoms(){
		return query;
	}
	
	/**
	 * generates a String representation of the patient
	 */
	public String toString(){
		String res =  id+"\t"+disease;
		for(int symp: query){
			res+="\t"+symp;
		}
		return res;
	}
	
	/**
	 * method to transform the string representation of a simulated patient generated by toString() into a
	 * {@link SimulatedPatient} object
	 * @param patientToString string representation of a simulated patient, tab separated String containing patient id
	 * (position 0), disease id (position 1) and symptom ids (position 2 and following)
	 * @return SimulatedPatient object
	 */
	public static SimulatedPatient StringToPatient(String patientToString){
		String[] split = patientToString.split("\t");
		// invalid String -> missing patient id or disease id!
		if(split.length<2){
			return null;
		}
		//generate patient id, disease id and symptom list
		String patientId = split[0];
		int diseaseId = Integer.parseInt(split[1]);
		LinkedList<Integer> symptoms = new LinkedList<Integer>();
		for(int i=2; i<split.length; i++){
			symptoms.add(Integer.parseInt(split[i]));
		}
		return new SimulatedPatient(patientId, diseaseId, symptoms);
	}

}
